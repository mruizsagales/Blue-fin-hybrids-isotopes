library(readr)
library(readxl)
library(rstatix)
library(stringr)
library(SuessR)
library(tidyr)
library(tidyverse)
library(TSA)
library(vegan)
library(zoo)
}
merge <- read_excel("/Users/marcruizisagales/Dropbox/00_papers/2023_hybrids_SIA_baleen/Blue_whale_results/PER_CAROL_BO_0_point_alignments_29_juny_total_-4_amb_sofre_blue_25_april_2024.xlsx")
# 3. Same number of measured points along the baleen (closest to the base for each baleen)
values_by_category <- list(
F13065 = c(-4:25),
F13066 = c(-3:26),
F13068 = c(-3:26),
F13073 = c(-1:28),
F13076 = c(-4:25),
F13129 = c(-4:25),
F18022 = c(-4:25),
F18098 = c(0:29),
BMUS_2010 = c(-4:25),
BMUS_1990 = c(-4:25)
)
filtered_data <- merge %>%
filter(
(Whale == "F13065" & Cm %in% values_by_category$F13065) |
(Whale == "F13066" & Cm %in% values_by_category$F13066) |
(Whale == "F13068" & Cm %in% values_by_category$F13068) |
(Whale == "F13073" & Cm %in% values_by_category$F13073) |
(Whale == "F13076" & Cm %in% values_by_category$F13076) |
(Whale == "F13129" & Cm %in% values_by_category$F13129) |
(Whale == "F18022" & Cm %in% values_by_category$F18022) |
(Whale == "F18098" & Cm %in% values_by_category$F18098) |
(Whale == "BMUS_2010" & Cm %in% values_by_category$BMUS_2010) |
(Whale == "BMUS_1990" & Cm %in% values_by_category$BMUS_1990)
)
sum(is.na(filtered_data$dN))
sum(is.na(filtered_data$dC))
sum(is.na(filtered_data$dS))
filtered_data$dN <- na.approx(filtered_data$dN)
filtered_data$dC <- na.approx(filtered_data$dC)
filtered_data$dS <- na.approx(filtered_data$dS)
merge_good_ind<-filtered_data
merge_good_ind$Data_capt[241:300] <- as.Date(c(rep("2010/08/23", 30),rep("1987/08/23", 30))) # add year of stranding for the blue whale
#--------------------------------------------------------------------------------
# 02 - Time estimation
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes")
source("01_Data_preparation.R")
combined_df <- NULL;
for (i in 1:length(unique(merge_good_ind$Whale))) {
df_i <- dplyr::filter(merge_good_ind, Whale == unique(merge_good_ind$Whale)[i]) # We select one fin whale individual from 2013
growth_rate <- 16.07  # Baleen plate growth rate (centimeters per year; Ruiz-Sagalés et al., 2024)
last_sample <- unique(ymd(df_i$Data_capt)) # Date of last keratin sample (catch date)
df_i <-
df_i %>%
dplyr::mutate(days = Cm * 365.25 / growth_rate) %>% # Number of days between samples starting at Cm 0
dplyr::mutate(days = days - days[1]) %>% # Number of days between samples starting at Cm -4
dplyr::mutate(rev_days = days - days[length(days)]) %>% # Number of days starting at maximum Cm
dplyr::mutate(sample_date = last_sample + rev_days) %>% # Estimated date
dplyr::mutate(year = year(sample_date)) %>% # Estimated date year
dplyr::mutate(year_rev = rev(sample_date)) # Estimated date retrospectively (real date)
df_i$Year_from_sample_date <- format(as.Date(df_i$year_rev), "%Y") # year from the date estimated retrospectively
df_i$Year_month <- format(as.Date(df_i$year_rev), "%Y/%m") # year and month from the date estimated retrospectively
df_i$Month_from_sample_date <- format(as.Date(df_i$year_rev), "%m") # month from the date estimated retrospectively
combined_df <- rbind(combined_df, df_i)
}
print(combined_df)
#--------------------------------------------------------------------------------
# 03 - Suess and Laws effect correction
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes")
source("02_Time_estimation.R")
combined_df$id <- seq.int(nrow(combined_df)) # add a sequence number to each row
combined_df <- combined_df %>% add_column(region = "Subpolar North Atlantic") # add the Subpolar North Atlantic region to each row
df1 <- combined_df # rename combined_df to df1
#--------------------------------------------------------------------------------
# 03 - Suess and Laws effect correction
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/02code")
source("02_Time_estimation.R")
{
library(car)
library(corrplot)
library(devtools)
library(dplyr)
library(ecotraj)
library(egg)
library(ellipse)
library(ggcorrplot)
library(ggeffects)
library(ggh4x)
library(ggplot2)
library(ggrepel)
library(ggstatsplot)
library(ggtext)
library(here)
library(lubridate)
library(lme4)
library(lmerTest)
library(mgcv)
library(nicheROVER)
library(nichetools)
library(patchwork)
#library(pairwiseAdonis)
library(purrr)
library(RColorBrewer)
library(readr)
library(readxl)
library(rstatix)
library(stringr)
library(SuessR)
library(tidyr)
library(tidyverse)
library(TSA)
library(vegan)
library(zoo)
}
merge <- read_excel("/Users/marcruizisagales/Dropbox/00_papers/2023_hybrids_SIA_baleen/Blue_whale_results/PER_CAROL_BO_0_point_alignments_29_juny_total_-4_amb_sofre_blue_25_april_2024.xlsx")
# 3. Same number of measured points along the baleen (closest to the base for each baleen)
values_by_category <- list(
F13065 = c(-4:25),
F13066 = c(-3:26),
F13068 = c(-3:26),
F13073 = c(-1:28),
F13076 = c(-4:25),
F13129 = c(-4:25),
F18022 = c(-4:25),
F18098 = c(0:29),
BMUS_2010 = c(-4:25),
BMUS_1990 = c(-4:25)
)
filtered_data <- merge %>%
filter(
(Whale == "F13065" & Cm %in% values_by_category$F13065) |
(Whale == "F13066" & Cm %in% values_by_category$F13066) |
(Whale == "F13068" & Cm %in% values_by_category$F13068) |
(Whale == "F13073" & Cm %in% values_by_category$F13073) |
(Whale == "F13076" & Cm %in% values_by_category$F13076) |
(Whale == "F13129" & Cm %in% values_by_category$F13129) |
(Whale == "F18022" & Cm %in% values_by_category$F18022) |
(Whale == "F18098" & Cm %in% values_by_category$F18098) |
(Whale == "BMUS_2010" & Cm %in% values_by_category$BMUS_2010) |
(Whale == "BMUS_1990" & Cm %in% values_by_category$BMUS_1990)
)
sum(is.na(filtered_data$dN))
sum(is.na(filtered_data$dC))
sum(is.na(filtered_data$dS))
filtered_data$dN <- na.approx(filtered_data$dN)
filtered_data$dC <- na.approx(filtered_data$dC)
filtered_data$dS <- na.approx(filtered_data$dS)
merge_good_ind<-filtered_data
merge_good_ind$Data_capt[241:300] <- as.Date(c(rep("2010/08/23", 30),rep("1987/08/23", 30))) # add year of stranding for the blue whale
#--------------------------------------------------------------------------------
# 02 - Time estimation
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes")
source("01_Data_preparation.R")
#--------------------------------------------------------------------------------
# 02 - Time estimation
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/02code")
source("01_Data_preparation.R")
combined_df <- NULL;
for (i in 1:length(unique(merge_good_ind$Whale))) {
df_i <- dplyr::filter(merge_good_ind, Whale == unique(merge_good_ind$Whale)[i]) # We select one fin whale individual from 2013
growth_rate <- 16.07  # Baleen plate growth rate (centimeters per year; Ruiz-Sagalés et al., 2024)
last_sample <- unique(ymd(df_i$Data_capt)) # Date of last keratin sample (catch date)
df_i <-
df_i %>%
dplyr::mutate(days = Cm * 365.25 / growth_rate) %>% # Number of days between samples starting at Cm 0
dplyr::mutate(days = days - days[1]) %>% # Number of days between samples starting at Cm -4
dplyr::mutate(rev_days = days - days[length(days)]) %>% # Number of days starting at maximum Cm
dplyr::mutate(sample_date = last_sample + rev_days) %>% # Estimated date
dplyr::mutate(year = year(sample_date)) %>% # Estimated date year
dplyr::mutate(year_rev = rev(sample_date)) # Estimated date retrospectively (real date)
df_i$Year_from_sample_date <- format(as.Date(df_i$year_rev), "%Y") # year from the date estimated retrospectively
df_i$Year_month <- format(as.Date(df_i$year_rev), "%Y/%m") # year and month from the date estimated retrospectively
df_i$Month_from_sample_date <- format(as.Date(df_i$year_rev), "%m") # month from the date estimated retrospectively
combined_df <- rbind(combined_df, df_i)
}
print(combined_df)
#--------------------------------------------------------------------------------
# 03 - Suess and Laws effect correction
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/02code")
source("02_Time_estimation.R")
combined_df$id <- seq.int(nrow(combined_df)) # add a sequence number to each row
combined_df <- combined_df %>% add_column(region = "Subpolar North Atlantic") # add the Subpolar North Atlantic region to each row
df1 <- combined_df # rename combined_df to df1
subset <- df1[c("id", "dC","Year_from_sample_date","region")] # select the merge3 column names (for RSuess) and name it subset
names(subset) <- c("id", "d13c","year","region") # rename subset columnames
subset$year <- as.numeric(subset$year) # define year as a numeric variable
subset <- as.data.frame(subset) # define subset as a dataframe
df2 <- SuessR(data=subset, correct.to = 2022) # correct the Suess and Laws effect to the year 2022
data_d13cor <- merge(df1,df2,by="id") # merge df1 and df2
df <- data_d13cor
names(df) <- c("id","Cm","d15n","dC","d34s","Whale_1","Whale","Sex","Status","Talla_fetus_(cm)","Sexe_fetus","Length","Talla_(peus)","Data_capt","Lat","Long","Edat","Year","species","days","rev_days","sample_date","year.x","year_rev","Year_from_sample_date","Year_month","Month_from_sample_date","region","year.y","d13c.uncor","Laws.cor","Suess.cor","net.cor","d13c")
#library(openxlsx) # save
#library(openxlsx) # save
#write.xlsx(df, file = "All_merged_time_calibrated_2013_to_2022_Suess_cor.xlsx")
#--------------------------------------------------------------------------------
# 04 - Basic statistics and plots of the baleen isotopes per individual
#--------------------------------------------------------------------------------
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/02code")
source("03_Suess_Laws_effect_correction.R")
df
unique(df$Whale) # check individuals
# mean + SD (range) for d15n, d13c and d34s per Whale
df %>% dplyr::group_by(Whale) %>% dplyr::reframe(mean(d15n,na.rm=T),sd(d15n,na.rm=T),range(d15n,na.rm=T),
mean(d13c,na.rm=T),sd(d13c,na.rm=T),range(d13c,na.rm=T),
mean(d34s,na.rm=T),sd(d34s,na.rm=T),range(d34s,na.rm=T))
# mean + SD (range) for d15n, d13c and d34s per Class
df %>% dplyr::group_by(species) %>% dplyr::reframe(mean(d15n,na.rm=T),sd(d15n,na.rm=T),range(d15n,na.rm=T),
mean(d13c,na.rm=T),sd(d13c,na.rm=T),range(d13c,na.rm=T),
mean(d34s,na.rm=T),sd(d34s,na.rm=T),range(d34s,na.rm=T))
isotope= c("d15n","d13c","d34s")
species_colors <- c("blue" = "#313695","hybrid" = "#F46D43","fin" = "#A50026")
species_order <- c("blue", "hybrid", "fin")
individuals <- unique(df$Whale)
stat_results <- list() # storage for all statistics
pred_df <- data.frame()  # storage for all predictions
for(iso in isotope) { # loops over each isotope
for (ind in individuals) { # loops over each ind.
df_ind <- df %>% dplyr::filter(Whale == ind, is.finite(.data[[iso]]), is.finite(Cm)) # filters the dataset for one individual whale and the current isotope, keeping only finite values
# AIC optimization
k_values <- 3:29
aic_values <- sapply(k_values, function(k) { # fits a GAM for each candidate smoothness parameter k (between 3 and 29)
model <- try(gam(reformulate("s(Cm, k = k, bs = 'cs')", response = iso),
data = df_ind, family = gaussian(), gamma = 1), silent = TRUE)
if (!inherits(model, "try-error")) AIC(model) else NA
})
if (all(is.na(aic_values))) next
best_k <- k_values[which.min(aic_values)] # selects the value of k that minimizes AIC
best_k <- min(best_k, floor(nrow(df_ind)/2))  # ensures k is not too large (limited to half the number of observations)
# Fit final model
final_model <- try(gam(reformulate("s(Cm, k = best_k, bs = 'cs')", response = iso), data = df_ind, family = gaussian()), silent = TRUE) # fits the final GAM model with the best k
# --- Store stats ---
sm <- summary(final_model)
stat_results[[paste(ind, iso, sep = "_")]] <- data.frame( # extracts key statistics from the GAM (EDF, F, p-value, AIC, and chosen k)
Individu = ind,
Isotope = iso,
EDF = sum(sm$s.table[, "edf"]),
Ref_df = sum(sm$s.table[, "Ref.df"]),
F = sum(sm$s.table[, "F"]),
p_value = min(sm$s.table[, "p-value"]),
AIC = AIC(final_model),
k_used = best_k
)
# Predictions
pred <- ggpredict(final_model, terms = "Cm") # compute predicted values along the Cm gradient
pred$species <- unique(df_ind$species)
pred$Whale <- ind  # keep track of the individual
pred$Isotope <- iso  # keep track of the individual
pred_df <- rbind(pred_df, pred)  # append to master dataframe
}
}
pred_df<- as.data.frame(pred_df)
# a) d15n
pred_df_dN <- pred_df %>% filter(Isotope == "d15n")
p <- ggplot(data=pred_df_dN,aes(x = x, y = predicted)) +
geom_point(data = df, aes(x = Cm, y = d15n, fill = species),
shape = 21, color = "black", alpha = 0.2) +
geom_line(aes(color = species), size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = species), alpha = 0.3) +
labs(x = "Distance from gingiva (cm)", y = expression(delta^15*N~"(\u2030)")) +
coord_cartesian(xlim = c(-5, 35), ylim = c(7, 12.5)) +
scale_fill_manual(values = species_colors) +
scale_color_manual(values = species_colors) +
theme_article(base_size = 10, base_family = "Optima") +
theme(aspect.ratio = 3 / 4, legend.position = "none",strip.text = element_text(size = 10), axis.title.x = element_blank(),
axis.text.x = element_blank()) + facet_wrap(vars(Whale), ncol=5)
p
# b) d13c
pred_df_dC <- pred_df %>% filter(Isotope == "d13c")
p1 <- ggplot(data=pred_df_dC,aes(x = x, y = predicted)) +
geom_point(data = df, aes(x = Cm, y = d13c, fill = species),
shape = 21, color = "black", alpha = 0.2) +
geom_line(aes(color = species), size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = species), alpha = 0.3) +
labs(x = "Distance from gingiva (cm)", y = expression(delta^13*C~"(\u2030)")) +
coord_cartesian(xlim = c(-5, 35), ylim = c(-21, -18)) +
scale_fill_manual(values = species_colors) +
scale_color_manual(values = species_colors) +
theme_article(base_size = 10, base_family = "Optima") +
theme(aspect.ratio = 3 / 4, legend.position = "none",strip.text = element_text(size = 10),axis.title.x = element_blank(),
axis.text.x = element_blank()) + facet_wrap(vars(Whale), ncol=5)
p1
# c) d34s
pred_df_dS <- pred_df %>% filter(Isotope == "d34s")
p2 <- ggplot(data=pred_df_dS,aes(x = x, y = predicted)) +
geom_point(data = df, aes(x = Cm, y = d34s, fill = species),
shape = 21, color = "black", alpha = 0.2) +
geom_line(aes(color = species), size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = species), alpha = 0.3) +
labs(x = "Distance from gingiva (cm)", y = expression(delta^34*S~"(\u2030)")) +
coord_cartesian(xlim = c(-5, 35), ylim = c(16, 20)) +
scale_fill_manual(values = species_colors) +
scale_color_manual(values = species_colors) +
theme_article(base_size = 10, base_family = "Optima") +
theme(aspect.ratio = 3 / 4, legend.position = "none",strip.text = element_text(size = 10)) + facet_wrap(vars(Whale), ncol=5)
p2
plot_ind_N_C_S = p/p1/p2 + plot_annotation(tag_levels = 'A')
plot_ind_N_C_S
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/2code")
source("03_Suess_Laws_effect_correction.R")
library(lme4)
library(lmerTest)
library(effects)
library(lvmisc)
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/2code")
source("03_Suess_Laws_effect_correction.R")
df
whale <- df[,c(3,34,5,7,19)] # select only necessary columns
whale1 <-whale[complete.cases(whale), ] # keep rows where all columns have non-missing values
whale1$species<- factor(whale1$species, levels = c('fin','hybrid','blue'))
#test for normality
whale1 %>% dplyr::group_by(species) %>% shapiro_test(d15n)
whale1 %>% dplyr::group_by(species) %>% shapiro_test(d13c)
whale1 %>% dplyr::group_by(species) %>% shapiro_test(d34s)
#test for homoscedasticity
leveneTest(d15n ~ species, data = whale1)
leveneTest(d13c ~ species, data = whale1)
leveneTest(d34s ~ species, data = whale1)
#d15n
lmer_dN <- lmer(d15n ~ 1 + species + (1|Whale), data=whale1)
summary(lmer_dN)
plot(allEffects(lmer_dN))
# Model validation
plot_model(lmer_dN) # diagnostics
cv_m1 <- lvmisc::loo_cv(lmer_dN, whale1, "Whale", keep = "used") # cross-validation
accuracy(lmer_dN) # accuracy
compare_accuracy(lmer_dN, cv_m1) # compare accuracy
confint(lmer_dN) # confint
# Model validation with boostraping
qqPlot(resid(lmer_dN)) # normality of the residuals
qqPlot(c(ranef(lmer_dN)$Whale$`(Intercept)`)) # normality of the random effects
plot(lmer_dN) # variance homogeneity
f = function(m) {res= fixef(m)[2]; names(res) = names(fixef(m)[2]); res}
boost <- lme4::bootMer(lmer_dN, f, nsim=200, type="semiparametric", use.u=TRUE)
plot(boost, index= 1)
pred_dN <- ggpredict(lmer_dN, terms = "species")
pred_dN$x <- factor(pred_dN$x, levels = c("blue", "hybrid", "fin"))
pN <- ggplot(pred_dN, aes(x = x, y = predicted)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high, color = x), size = 0.8) +
scale_color_manual(values = species_colors) +  # your predefined palette
labs(
#title = expression(paste(delta^15, "N")),
x = "",
y = expression(delta^15*N~"(\u2030)")
) +
theme_article(base_size = 15, base_family = "Optima") +
theme(legend.position = "none", aspect.ratio = 1, axis.text.x = element_blank()) + ylim(7.2,12.4)
pN
#d13c
lmer_dC <- lmer(d13c ~ 1 + species + (1|Whale), data=whale1)
summary(lmer_dC)
plot(allEffects(lmer_dC))
# Model validation
plot_model(lmer_dC) # diagnostics
cv_m1 <- lvmisc::loo_cv(lmer_dC, whale1, "Whale", keep = "used") # cross-validation
accuracy(lmer_dC) # accuracy
compare_accuracy(lmer_dC, cv_m1) # compare accuracy
confint(lmer_dC) # confint
# Model validation with boostraping
qqPlot(resid(lmer_dC)) # normality of the residuals
qqPlot(c(ranef(lmer_dC)$Whale$`(Intercept)`)) # normality of the random effects
plot(lmer_dC) # variance homogeneity
f = function(m) {res= fixef(m)[2]; names(res) = names(fixef(m)[2]); res}
boost <- lme4::bootMer(lmer_dC, f, nsim=200, type="semiparametric", use.u=TRUE)
plot(boost, index= 1)
pred_dC <- ggpredict(lmer_dC, terms = "species")
pred_dC$x <- factor(pred_dC$x, levels = c("blue", "hybrid", "fin"))
pC <- ggplot(pred_dC, aes(x = x, y = predicted)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high, color = x), size = 0.8) +
scale_color_manual(values = species_colors) +  # your predefined palette
labs(
#title = expression(paste(delta^13, "C")),
x = "",
y = expression(delta^13*C~"(\u2030)")
) +
theme_article(base_size = 15, base_family = "Optima") +
theme(legend.position = "none", aspect.ratio = 1, axis.text.x = element_blank()) + ylim(-20.9,-18.1)
pC
#d34s
lmer_dS <- lmer(d34s ~ 1 + species + (1|Whale), data=whale1)
summary(lmer_dS)
plot(allEffects(lmer_dS))
# Model validation
plot_model(lmer_dS) # diagnostics
cv_m1 <- loo_cv(lmer_dS, df, "Whale", keep = "used") # cross-validation
accuracy(lmer_dS) # accuracy
compare_accuracy(lmer_dS, cv_m1) # compare accuracy
confint(lmer_dS) # confint
# Model validation with boostraping
qqPlot(resid(lmer_dS)) # normality of the residuals
qqPlot(c(ranef(lmer_dS)$Whale$`(Intercept)`)) # normality of the random effects
plot(lmer_dS) # variance homogeneity
f = function(m) {res= fixef(m)[2]; names(res) = names(fixef(m)[2]); res}
boost <- lme4::bootMer(lmer_dS, f, nsim=200, type="semiparametric", use.u=TRUE)
plot(boost, index= 1)
pred_dS <- ggpredict(lmer_dS, terms = "species")
pred_dS$x <- factor(pred_dS$x, levels = c("blue", "hybrid", "fin"))
pS <- ggplot(pred_dS, aes(x = x, y = predicted)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high, color = x), size = 0.8) +
scale_color_manual(values = species_colors) +  # your predefined palette
labs(
#title = expression(paste(delta^34, "S")),
x = "Species",
y = expression(delta^34*S~"(\u2030)")
) +
theme_article(base_size = 15, base_family = "Optima") +
theme(legend.position = "none", aspect.ratio = 1) + scale_x_discrete(labels = c("blue" = "Blue", "hybrid" = "Hybrid", "fin" = "Fin")) + ylim(16.1,19.9)
pS
ptot <- pN / pC / pS
ptot
#ggsave("/Users/marcruizisagales/Dropbox/00_papers/2023_hybrids_SIA_baleen/Final_plots/predictions_N_C_S.svg", plot = last_plot(), dpi = 300, width = 10, height = 15, units = "cm", device = "svg")
#ggsave("/Users/marcruizisagales/Dropbox/00_papers/2023_hybrids_SIA_baleen/Final_plots/predictions_N_C_S.svg", plot = last_plot(), dpi = 300, width = 10, height = 15, units = "cm", device = "svg")
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/code2")
source("03_Suess_Laws_effect_correction.R")
df
whale <- df[,c(3,34,5,7,19)] # select only necessary columns
whale1 <-whale[complete.cases(whale), ] # keep rows where all columns have non-missing values
whale1$species<- factor(whale1$species, levels = c('fin','hybrid','blue'))
# Define species-specific colors
species_colors <- c("blue" = "#313695","hybrid" = "#F46D43","fin" = "#A50026")
# Compute group means and standard deviations
summary_df <- whale1 %>%
group_by(species, Whale) %>%
summarise(
mean_d13c = mean(d13c, na.rm = TRUE),
mean_d15n = mean(d15n, na.rm = TRUE),
mean_d34s = mean(d34s, na.rm = TRUE),
sd_d13c = sd(d13c, na.rm = TRUE),
sd_d15n = sd(d15n, na.rm = TRUE),
sd_d34s = sd(d34s, na.rm = TRUE),
.groups = 'drop'
)
setwd("/Users/marcruizisagales/Documents/GitHub/Blue-fin-hybrids-isotopes/02code/")
source("03_Suess_Laws_effect_correction.R")
df
whale <- df[,c(2,3,34,5,7,19)]
whale1 <-whale[complete.cases(whale), ]
ccf_results_N <- list()
ccf_results_C <- list()
ccf_results_S <- list()
whale_names <- unique(whale1$Whale) # name of individuals
num_whales <- length(whale_names) # number of individuals
# Empty matrix to save maximum correlations between the isotopic oscillations of individuals
correlation_matrix_N <- matrix(NA, nrow = num_whales, ncol = num_whales, dimnames = list(whale_names, whale_names))
correlation_matrix_C <- matrix(NA, nrow = num_whales, ncol = num_whales, dimnames = list(whale_names, whale_names))
correlation_matrix_S <- matrix(NA, nrow = num_whales, ncol = num_whales, dimnames = list(whale_names, whale_names))
# loop for each pair of individuals
for (i in 1:num_whales) {
for (j in 1:num_whales) {
if (i != j) {
# dNcorr
dN_i <- whale1[whale1$Whale == whale_names[i], "d15n"]
dN_j <- whale1[whale1$Whale == whale_names[j], "d15n"]
ccf_N <- ccf(dN_i, dN_j, lag.max = 5, plot = FALSE)
correlation_matrix_N[i, j] <- max(abs(ccf_N$acf))
# dCcorr
dC_i <- whale1[whale1$Whale == whale_names[i], "d13c"]
dC_j <- whale1[whale1$Whale == whale_names[j], "d13c"]
ccf_C <- ccf(dC_i, dC_j, lag.max = 5, plot = FALSE)
correlation_matrix_C[i, j] <- max(abs(ccf_C$acf))
# dScorr
dS_i <- whale1[whale1$Whale == whale_names[i], "d34s"]
dS_j <- whale1[whale1$Whale == whale_names[j], "d34s"]
ccf_S <- ccf(dS_i, dS_j, lag.max = 5, plot = FALSE)
correlation_matrix_S[i, j] <- max(abs(ccf_S$acf))
}
}
}
# Substitute the NA's for 1's
correlation_matrix_N[is.na(correlation_matrix_N)] <- 1
correlation_matrix_C[is.na(correlation_matrix_C)] <- 1
correlation_matrix_S[is.na(correlation_matrix_S)] <- 1
# Corrplots
corrplot(correlation_matrix_N, method = "color", tl.col = "black", type = "lower",
outline = TRUE, title = "Cross-correlation (dNcorr)", mar=c(0,0,2,0),
addCoef.col = "black", number.cex = 0.45, # mida del text
cl.pos = "r", number.digits = 2)
corrplot(correlation_matrix_C, method = "color", tl.col = "black", type = "lower",
outline = TRUE, title = "Cross-correlation (dCcorr)", mar=c(0,0,2,0),
addCoef.col = "black", number.cex = 0.45, # mida del text
cl.pos = "r", number.digits = 2)
corrplot(correlation_matrix_S, method = "color", tl.col = "black", type = "lower",
outline = TRUE, title = "Cross-correlation (dScorr)", mar=c(0,0,2,0),
addCoef.col = "black", number.cex = 0.45, # mida del text
cl.pos = "r", number.digits = 2)
a<- ggcorrplot::ggcorrplot(correlation_matrix_N,method = c("square"),type = c("lower"),ggtheme = theme_article(base_size = 10, base_family = "Optima")) + scale_fill_viridis_c(option = "A", direction = -1, begin=0, end=1) + theme(legend.position = "none")
b<-ggcorrplot::ggcorrplot(correlation_matrix_C,method = c("square"),type = c("lower"),ggtheme = theme_article(base_size = 10, base_family = "Optima")) + scale_fill_viridis_c(option = "A", direction = -1, begin=0, end=1) + theme(legend.position = "none")
c<-ggcorrplot::ggcorrplot(correlation_matrix_S,method = c("square"),type = c("lower"),ggtheme = theme_article(base_size = 10, base_family = "Optima")) + scale_fill_viridis_c(option = "A", direction = -1, begin=0, end=1)
tot <- a+b+c
df$Whale <- factor(df$Whale, levels = c("BMUS_2010", "BMUS_1990", "F13129", "F18022", "F18098","F13065", "F13066", "F13068", "F13073", "F13076"))
df$species <- factor(df$species, levels = c("blue", "hybrid", "fin"))
whale_species <- df %>% distinct(Whale, species) %>% arrange(species)
# create a function to generate light variations per species
generate_variants <- function(base_color, n) {
lighten(base_color, amount = seq(0, 0.4, length.out = n))  # up to 40% lighter
}
# assign colors per Whale by varying the species base
individual_colors <- whale_species %>%
group_by(species) %>%
mutate(color = generate_variants(species_colors[species[1]], n())) %>%
ungroup() %>%
select(Whale, color) %>%
deframe()
function (..., skipCalls = 0, frame = parent.frame())
